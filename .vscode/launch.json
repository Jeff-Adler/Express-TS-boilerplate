{
  "version": "0.2.0",
  "configurations": [
    /**
     * To debug with ts-node-dev and development TypeORM connection:
     * In console, run `npm run start:debug`
     * In VSCode, start debug task `Attach to start:debug
     */
    {
      "type": "node",
      "request": "attach",
      "name": "Attach to start:debug",
      "protocol": "inspector",
      "port": 4321,
      "restart": true,
      "cwd": "${workspaceRoot}"
    },
    /**
     * To debug in testing environment:
     * In console, run `npm run test:debug`
     * In VSCode, start debug task `Attach to test:debug`.
     * If you hit breakpoint in jest.js, just continue the debugger
     */
    {
      "type": "node",
      "request": "attach",
      "name": "Attach to test:debug",
      "protocol": "inspector",
      "port": 9229,
      // See https://github.com/microsoft/vscode/issues/102042#issuecomment-656402933 for why resolveSourceMapLocations is included
      "resolveSourceMapLocations": ["${workspaceFolder}/**", "!**/node_modules/**"],
      "restart": true,
      "cwd": "${workspaceRoot}"
    },
    /**
     * To debug with VSCode defaults:
     * Configure TypeORM connection to look for entities and migrations in `build/...js`
     */
    {
      "type": "node",
      "request": "launch",
      "name": "Debugger",
      "skipFiles": ["<node_internals>/**"],
      "program": "${workspaceFolder}/src/index.ts",
      "sourceMaps": true,
      "trace": "all",
      "preLaunchTask": "tsc: build - tsconfig.json",
      "outFiles": ["${workspaceFolder}/build/**/*.js"],
      "envFile": "${workspaceFolder}/config/debug.env"
    }
  ]
}
